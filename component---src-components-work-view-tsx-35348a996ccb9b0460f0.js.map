{"version":3,"sources":["webpack:///./src/images/info.png","webpack:///./src/components/workView.tsx","webpack:///./src/images/eye.png"],"names":["module","exports","Container","styled","div","Info","props","theme","mobileSize","MoreInfoButton","WorkView","data","worksJson","title","medium","size","year","image","slug","useState","isShowInfo","setIsShowInfo","isMobile","useDeviceDetect","pageTitle","split","fade","to","fluid","childImageSharp","onClick","window","scrollTo","top","behavior","onMouseEnter","onMouseLeave","src","info","alt","className","eye","query"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,oD,kCCA3C,0MAiBMC,EAAYC,IAAOC,IAAV,qEAAGD,CAAH,kEAKTE,EAAOF,IAAOC,IAAV,gEAAGD,CAAH,6cAqB6B,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,cAiBtDC,EAAiBN,IAAOC,IAAV,0EAAGD,CAAH,mNAqELO,UA/CE,SAACJ,GAAyB,MACUA,EAAMK,KAAKC,UAAtDC,EADiC,EACjCA,MAAOC,EAD0B,EAC1BA,OAAQC,EADkB,EAClBA,KAAMC,EADY,EACZA,KAAMC,EADM,EACNA,MAAOC,EADD,EACCA,KADD,EAELC,oBAAS,GAAtCC,EAFkC,KAEtBC,EAFsB,KAGjCC,EAAaC,cAAbD,SAEFE,EAAYN,EAAKO,MAAM,KAAK,GAAGA,MAAM,KAAK,GAEhD,OACE,kBAAC,IAAD,KACE,kBAACvB,EAAD,KACE,kBAAC,IAAD,CAAKW,MAAOW,IACZ,kBAAC,IAAD,CAAME,MAAI,EAACC,GAAG,KACZ,kBAAC,IAAD,CAAKC,MAAOX,EAAMY,gBAAgBD,SAEpC,kBAACnB,EAAD,CACEqB,QAAS,WACHR,IACFD,GAAeD,GACfW,OAAOC,SAAS,CAAEC,IAAK,IAAMC,SAAU,aAG3CC,aAAc,kBAAMd,GAAc,IAClCe,aAAc,kBAAMf,GAAc,KAEhCD,EAGA,yBAAKiB,IAAKC,IAAMC,IAAI,OAAOC,UAAU,cAFrC,yBAAKH,IAAKI,IAAKF,IAAI,UAKtBnB,GACC,kBAACf,EAAD,KACE,yBAAKmC,UAAU,SACb,2BAAI3B,GACJ,2BAAIC,IAEN,yBAAK0B,UAAU,SACb,2BAAIzB,GACJ,2BAAIC,QAWX,IAAM0B,EAAQ,c,qBCnIrB1C,EAAOC,QAAU,IAA0B","file":"component---src-components-work-view-tsx-35348a996ccb9b0460f0.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/info-7a26e498154af7c7846eba980ae95da9.png\";","import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport { useDeviceDetect } from \"../utils/useDeviceDetect\"\nimport Link from \"gatsby-plugin-transition-link/AniLink\"\nimport eye from \"../images/eye.png\"\nimport info from \"../images/info.png\"\n\n// template page generated automatically for each work\n\ntype WorkViewProps = {\n  data: any\n}\n\nconst Container = styled.div`\n  @media only screen and (max-width: 1000px) {\n    margin-top: 150px;\n  }\n`\nconst Info = styled.div`\n  .part1 {\n    position: fixed;\n    top: 450px;\n    left: -150px;\n    width: 500px;\n    transform: rotate(90deg);\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n  .part2 {\n    position: fixed;\n    top: 400px;\n    right: -150px;\n    width: 500px;\n    transform: rotate(-90deg);\n    display: flex;\n    justify-content: space-between;\n  }\n\n  @media only screen and (max-width: ${props => props.theme.mobileSize}) {\n    margin: 20px auto 100px;\n    justify-content: flex-start;\n    .part1,\n    .part2 {\n      transform: initial;\n      position: initial;\n      width: 80vw;\n      margin: 0 auto;\n      p {\n        padding: 10px;\n        margin: 0;\n      }\n    }\n  }\n`\n\nconst MoreInfoButton = styled.div`\n  position: fixed;\n  right: 50px;\n  bottom: 20px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  transition: all 0.3s;\n  height: 50px;\n  width: 50px;\n\n  img {\n    height: 60px;\n  }\n\n  .info-icon {\n    height: 100px;\n  }\n`\n\nconst WorkView = (props: WorkViewProps) => {\n  const { title, medium, size, year, image, slug } = props.data.worksJson\n  const [isShowInfo, setIsShowInfo] = useState(false)\n  const { isMobile } = useDeviceDetect()\n\n  const pageTitle = slug.split(\"/\")[0].split(\"-\")[0]\n\n  return (\n    <Layout>\n      <Container>\n        <SEO title={pageTitle} />\n        <Link fade to=\"/\">\n          <Img fluid={image.childImageSharp.fluid} />\n        </Link>\n        <MoreInfoButton\n          onClick={() => {\n            if (isMobile) {\n              setIsShowInfo(!isShowInfo)\n              window.scrollTo({ top: 2000, behavior: \"smooth\" })\n            }\n          }}\n          onMouseEnter={() => setIsShowInfo(true)}\n          onMouseLeave={() => setIsShowInfo(false)}\n        >\n          {!isShowInfo ? (\n            <img src={eye} alt=\"info\" />\n          ) : (\n            <img src={info} alt=\"info\" className=\"info-icon\" />\n          )}\n        </MoreInfoButton>\n        {isShowInfo && (\n          <Info>\n            <div className=\"part1\">\n              <p>{title}</p>\n              <p>{medium}</p>\n            </div>\n            <div className=\"part2\">\n              <p>{size}</p>\n              <p>{year}</p>\n            </div>\n          </Info>\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default WorkView\n\nexport const query = graphql`\n  query workQ($id: String!) {\n    worksJson(id: { eq: $id }) {\n      title\n      slug\n      medium\n      size\n      year\n      image {\n        childImageSharp {\n          fluid(maxWidth: 1440) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/eye-c9ca3307af6257e370d1b7335634c0f0.png\";"],"sourceRoot":""}